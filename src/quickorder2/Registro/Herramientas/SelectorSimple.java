/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quickorder2.Registro.Herramientas;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import quickorder2.Registro.Herramientas.ListRenderers.*;

/**
 *
 * @author Mauro
 */
public class SelectorSimple extends javax.swing.JDialog {

    /**
     * Creates new form Selector
     */
    DefaultListModel modelo = null;

    public Object resultado = null;
    public Object resultados = null;

    public SelectorSimple(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
    }

    public void cargarRestaurantes() {
        modelo = new DefaultListModel();
        Iterator restaurantes = quickorder2.QuickOrder2.port.getDataRestaurantes().iterator();

        while (restaurantes.hasNext()) {
            webservices.DataRestaurante restaurante = (webservices.DataRestaurante) restaurantes.next();
            modelo.addElement(restaurante);
        }

        lstDatos.setCellRenderer(new RestauranteListCellRenderer());

        lstDatos.setModel(modelo);

        txtFiltro.addKeyListener(new RestauranteKeyAdapter());
    }

    public void cargarProductos(String restaurante) {
        modelo = new DefaultListModel();
        Iterator productos = quickorder2.QuickOrder2.port.restauranteGetIndividuales(restaurante).iterator();

        System.out.println(restaurante + " " + quickorder2.QuickOrder2.port.restauranteGetIndividuales(restaurante).size());
        while (productos.hasNext()) {
            webservices.DataIndividual producto = (webservices.DataIndividual) productos.next();
            modelo.addElement(producto);
        }

        lstDatos.setCellRenderer(new IndividualListCellRenderer());

        lstDatos.setModel(modelo);

        txtFiltro.addKeyListener(new IndividualKeyAdapter());
    }

    public void cargarClientes(){
        modelo = new DefaultListModel();
        Iterator clientes = quickorder2.QuickOrder2.port.getDataClientes().iterator();

        while (clientes.hasNext()) {
            webservices.DataCliente cliente = (webservices.DataCliente) clientes.next();
            modelo.addElement(cliente);
        }

        lstDatos.setCellRenderer(new ClienteListCellRenderer());

        lstDatos.setModel(modelo);

        txtFiltro.addKeyListener(new RestauranteKeyAdapter());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstDatos = new javax.swing.JList();
        txtFiltro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstDatos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstDatos);

        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        jLabel1.setText("Filtro:");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 309, Short.MAX_VALUE)
                        .addComponent(btnAceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        resultado = lstDatos.getSelectedValue();
        resultados = lstDatos.getSelectedValuesList().toArray();
        this.dispose();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed

    }//GEN-LAST:event_txtFiltroActionPerformed

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped

    }//GEN-LAST:event_txtFiltroKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectorSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectorSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectorSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectorSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectorSimple dialog = new SelectorSimple(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public class RestauranteKeyAdapter extends KeyAdapter {

        @Override
        public void keyReleased(KeyEvent event) {
            DefaultListModel filtrado = new DefaultListModel();

            for (int i = 0; i < modelo.getSize(); i++) {
                webservices.DataRestaurante restaurante = (webservices.DataRestaurante) modelo.get(i);
                if (restaurante.getNombre().toLowerCase().contains(txtFiltro.getText().toLowerCase())) {
                    filtrado.addElement(restaurante);
                }
            }

            lstDatos.setModel(filtrado);
        }
    }

    public class IndividualKeyAdapter extends KeyAdapter {

        @Override
        public void keyReleased(KeyEvent event) {
            DefaultListModel filtrado = new DefaultListModel();

            for (int i = 0; i < modelo.getSize(); i++) {
                webservices.DataIndividual producto = (webservices.DataIndividual) modelo.get(i);
                if (producto.getNombre().toLowerCase().contains(txtFiltro.getText().toLowerCase())) {
                    filtrado.addElement(producto);
                }
            }

            lstDatos.setModel(filtrado);
        }
    }
    
    public class ClienteKeyAdapter extends KeyAdapter {

        @Override
        public void keyReleased(KeyEvent event) {
            DefaultListModel filtrado = new DefaultListModel();

            for (int i = 0; i < modelo.getSize(); i++) {
                webservices.DataCliente cliente = (webservices.DataCliente) modelo.get(i);
                if (cliente.getNombre().toLowerCase().contains(txtFiltro.getText().toLowerCase())) {
                    filtrado.addElement(cliente);
                }
            }

            lstDatos.setModel(filtrado);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstDatos;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
