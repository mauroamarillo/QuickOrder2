/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quickorder2.Registro;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import static quickorder2.HerramientaImagenes.convertirImagen;
import static quickorder2.Registro.Herramientas.Validaciones.*;

/**
 *
 * @author Mauro
 */
public class Cliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNick = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFechaN = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnVerifNick = new javax.swing.JButton();
        BtnVerifMail = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnMostrarPwd = new javax.swing.JButton();
        txtPwd = new javax.swing.JPasswordField();
        btnRegistrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtImagen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnMostrarImg = new javax.swing.JButton();
        btnExplorar = new javax.swing.JButton();

        setClosable(true);
        setForeground(java.awt.Color.white);
        setTitle("Nuevo Usuario - Cliente");

        jLabel1.setText("Nickname:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Apellidos:");

        try {
            txtFechaN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Fecha de nacimiento:");

        jLabel5.setText("E-Mail:");

        jLabel6.setText("Direccion:");

        btnVerifNick.setText("Verificar");
        btnVerifNick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifNickActionPerformed(evt);
            }
        });

        BtnVerifMail.setText("Verificar");
        BtnVerifMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnVerifMailMousePressed(evt);
            }
        });
        BtnVerifMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVerifMailActionPerformed(evt);
            }
        });

        jLabel7.setText("Contrase√±a:");

        btnMostrarPwd.setText("Mostrar");
        btnMostrarPwd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMostrarPwdMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMostrarPwdMouseReleased(evt);
            }
        });

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtImagen.setEditable(false);
        txtImagen.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Imagen:");

        btnMostrarImg.setText("Mostrar");
        btnMostrarImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMostrarImgMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMostrarImgMouseReleased(evt);
            }
        });

        btnExplorar.setText("Explorar");
        btnExplorar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnExplorarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnExplorarMouseReleased(evt);
            }
        });
        btnExplorar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExplorarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellido)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNick, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnVerifNick))
                            .addComponent(txtNombre)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegistrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFechaN)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(txtImagen)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnExplorar))
                                    .addComponent(txtMail, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPwd, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BtnVerifMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnMostrarPwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnMostrarImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnVerifNick))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(BtnVerifMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btnMostrarPwd)
                    .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btnMostrarImg)
                    .addComponent(btnExplorar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnVerifMailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnVerifMailMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnVerifMailMousePressed

    private void btnMostrarPwdMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarPwdMousePressed
        char c = 0;
        txtPwd.setEchoChar(c);
    }//GEN-LAST:event_btnMostrarPwdMousePressed

    private void btnMostrarPwdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarPwdMouseReleased
        char c = '\u25cf';
        txtPwd.setEchoChar(c);
    }//GEN-LAST:event_btnMostrarPwdMouseReleased

    private void btnVerifNickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifNickActionPerformed
        if (quickorder2.QuickOrder2.port.nickOcupado(txtNick.getText())) {
            JOptionPane.showMessageDialog(this, "Ya existe un usuario con el nick " + txtNick.getText() + ".\n Ingrese un nuevo nick e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "El nick " + txtNick.getText() + " se encuentra disponible.", "Correcto", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnVerifNickActionPerformed

    private void BtnVerifMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVerifMailActionPerformed
        if (!validarEmail(txtMail.getText())) {
            JOptionPane.showMessageDialog(this, "El e-mail " + txtMail.getText() + " tiene un formato incorrecto.\nIngrese un mail con el formato 'usuario@ejemplo.com' e intentelo de nuevo.", "Correcto", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (quickorder2.QuickOrder2.port.emailOcupado(txtMail.getText())) {
            JOptionPane.showMessageDialog(this, "Ya existe un usuario con el e-mail " + txtMail.getText() + ".\nIngrese un nuevo e-mail e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        JOptionPane.showMessageDialog(this, "El e-mail " + txtMail.getText() + " es correcto y se encuentra disponible.", "Correcto", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_BtnVerifMailActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        String[] fecha = txtFechaN.getText().split("/");

        if (verificarDatos()) {
            try {
                quickorder2.QuickOrder2.port.insertarCliente(txtNick.getText(), txtMail.getText(), txtDireccion.getText(), txtNombre.getText(), txtApellido.getText(), fecha[0], fecha[1], fecha[2], convertirImagen(txtImagen.getText()), new String(txtPwd.getPassword()));
                if (quickorder2.QuickOrder2.port.buscarCliente(txtNick.getText()) != null) {
                    JOptionPane.showMessageDialog(this, "El restaurante " + txtNombre.getText() + " fue registrado correctamente.", "Correcto", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Aparentemente hubo un error.\n Revise los datos ingresados y su conexion a internet e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Seguro de que desea cancelar el registro?", "Confirmacion", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private boolean verificarDatos() {
        if (txtNick.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Nickname' es obligatorio.\n Ingrese un nick e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (quickorder2.QuickOrder2.port.nickOcupado(txtNick.getText())) {
            JOptionPane.showMessageDialog(this, "Ya existe un usuario con el nick " + txtNick.getText() + ".\n Ingrese un nuevo nick e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Nombre' es obligatorio.\n Ingrese un nombre e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtApellido.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Apellido' es obligatorio.\n Ingrese un apellido e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtDireccion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Direccion' es obligatorio.\n Ingrese una direccion e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!validarFecha((String) txtFechaN.getValue(), "dd/MM/yyyy")) {
            JOptionPane.showMessageDialog(this, "La fecha ingresada no es v√°lida.\n Ingrese una fecha v√°lida e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtMail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'E-Mail' es obligatorio.\n Ingrese un E-Mail e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!validarEmail(txtMail.getText())) {
            JOptionPane.showMessageDialog(this, "El e-mail " + txtMail.getText() + " tiene un formato incorrecto.\nIngrese un mail con el formato 'usuario@ejemplo.com' e intentelo de nuevo.", "Correcto", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        if (quickorder2.QuickOrder2.port.emailOcupado(txtMail.getText())) {
            JOptionPane.showMessageDialog(this, "Ya existe un usuario con el e-mail " + txtMail.getText() + ".\nIngrese un nuevo e-mail e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (new String(txtPwd.getPassword()).isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Contrase√±a' es obligatorio.\n Ingrese una contrase√±a e int√©ntelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void btnMostrarImgMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarImgMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMostrarImgMousePressed

    private void btnMostrarImgMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarImgMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMostrarImgMouseReleased

    private void btnExplorarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExplorarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExplorarMousePressed

    private void btnExplorarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExplorarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExplorarMouseReleased

    private void btnExplorarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExplorarActionPerformed
        JFileChooser fileOpen = new JFileChooser();

        // Get array of available formats
        String[] suffices = ImageIO.getReaderFileSuffixes();

        // Add a file filter for each one
        fileOpen.addChoosableFileFilter(new FileNameExtensionFilter("Image Files", suffices));

        int ret = fileOpen.showDialog(null, "Open file");
        if (ret == JFileChooser.APPROVE_OPTION) {
            txtImagen.setText(fileOpen.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_btnExplorarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnVerifMail;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExplorar;
    private javax.swing.JButton btnMostrarImg;
    private javax.swing.JButton btnMostrarPwd;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnVerifNick;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JFormattedTextField txtFechaN;
    private javax.swing.JTextField txtImagen;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNick;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPwd;
    // End of variables declaration//GEN-END:variables
}
